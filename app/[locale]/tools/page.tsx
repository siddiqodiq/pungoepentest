// app/tools/page.tsx
"use client"
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { ToggleGroup, ToggleGroupItem } from "@/components/ui/toggle-group"
import { Badge } from "@/components/ui/badge"
import { useState } from "react"
import { tools, Tool } from "@/lib/tools"
import { Command, CommandInput, CommandList, CommandEmpty, CommandGroup, CommandItem } from "@/components/ui/command"

export default function ToolsPage() {
  const [selectedCategory, setSelectedCategory] = useState("all")
  const [searchQuery, setSearchQuery] = useState("")

  const filteredTools = selectedCategory === "all" 
    ? tools.filter((tool) => tool.name.toLowerCase().includes(searchQuery.toLowerCase()))
    : tools.filter((tool) => tool.category === selectedCategory && tool.name.toLowerCase().includes(searchQuery.toLowerCase()))

  return (
    <div className="h-full p-8 space-y-6">
      <h1 className="text-3xl font-bold">Pungoe Pentest Plugins</h1>
      <p className="text-gray-600">Discover custom plugins for Pungoe Pentest that combine instructions, extra knowledge, and tools like terminal.</p>

      {/* Toggle Group for Categories and Show All */}
      <ToggleGroup
        type="single"
        value={selectedCategory}
        onValueChange={(value) => setSelectedCategory(value)}
        className="w-full"
      >
        <ToggleGroupItem value="all" aria-label="Show All">
          Show All
        </ToggleGroupItem>
        <ToggleGroupItem value="recon" aria-label="Toggle Recon">
          Recon
        </ToggleGroupItem>
        <ToggleGroupItem value="vulnerability" aria-label="Toggle Vulnerability Scanner">
          Vulnerability Scanner
        </ToggleGroupItem>
        <ToggleGroupItem value="exploit" aria-label="Toggle Exploit Tools">
          Exploit Tools
        </ToggleGroupItem>
        <ToggleGroupItem value="utils" aria-label="Toggle Utils">
          Utils
        </ToggleGroupItem>
      </ToggleGroup>

      {/* Search Input */}
      <div className="w-full">
        <Command className="rounded-lg border shadow-md">
          <CommandInput
            placeholder="Search tools..."
            value={searchQuery}
            onValueChange={setSearchQuery}
            className="h-10 w-full" // Menyesuaikan tinggi dan lebar input
          />
          {searchQuery && (
            <CommandList>
              <CommandEmpty>No results found.</CommandEmpty>
              <CommandGroup heading="Tools">
                {filteredTools.map((tool) => (
                  <CommandItem key={tool.id} value={tool.name}>
                    <div className="flex items-center space-x-4">
                      <div>
                        <p className="font-medium">{tool.name}</p>
                        <p className="text-sm text-gray-500">{tool.description}</p>
                      </div>
                      <Badge variant="secondary">{tool.status}</Badge>
                    </div>
                  </CommandItem>
                ))}
              </CommandGroup>
            </CommandList>
          )}
        </Command>
      </div>

      {/* Display Tools Based on Selected Category or Show All */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {filteredTools.map((tool) => (
          <Card key={tool.id}>
            <CardHeader>
              <CardTitle>{tool.name}</CardTitle>
              <CardDescription>{tool.description}</CardDescription>
            </CardHeader>
            <CardContent>
              <Badge variant="secondary">{tool.status}</Badge>
            </CardContent>
            <CardFooter>
              <Button>Install</Button>
            </CardFooter>
          </Card>
        ))}
      </div>
    </div>
  )
}